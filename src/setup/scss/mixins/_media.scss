@use '../variables';

///
/// Creates a media query
///
/// @param   {string|number}   [$up]           Either a breakpoint identifier (xxs, xs, ...) or an absolute value (with unit)
/// @param   {string|number}   [$down]         Either a breakpoint identifier (xxs, xs, ...) or an absolute value (with unit)
/// @param   {string}          [$media=all]    The targeted media
///
@mixin media($up: null, $down: null, $media: all, $breakpoints: variables.$breakpoints) {
  $query: if($media == all, 'all', 'only #{$media}');
  $indexOfUpBreakpoint: index(map-keys($breakpoints), $up);
  $indexOfDownBreakpoint: index(map-keys($breakpoints), $down);
  $isUpNumber: type-of($up) == number;
  $isDownNumber: type-of($down) == number;
  $upKey: if(
    $down and not($isDownNumber) and $indexOfDownBreakpoint and $indexOfDownBreakpoint < length($breakpoints),
    nth(map-keys($breakpoints), $indexOfDownBreakpoint + 1),
    null
  );
  $upValue: if($isUpNumber, $up, false) or map-get($breakpoints, $up);
  $downValue: if($isDownNumber, $down, false) or ($upKey and map-get($breakpoints, $upKey));
  $isValidUpValue: if(not($up) or ($up and $upValue), true, false);
  $isValidDownValue: if(not($down) or ($down and $downValue and $downValue > 0), true, false);
  $downIsBiggerThanUp: (not($up) or not($down)) or ($isValidUpValue and $isValidDownValue and $upValue < $downValue);

  @if not($isValidUpValue) {
    @error 'media(): no valid $up value.';
  } @else if not($isValidDownValue) {
    @error 'media(): no valid $down value.';
  } @else if not($downIsBiggerThanUp) {
    @error 'media(): $up is bigger than $down.';
  } @else if $up == null and $down == null and $media == all {
    @error 'media(): At least one of the parameters MUST be defined ($up, $down, $media).';
  } @else if $upValue == 0 and $down == null and $media == all {
    @error 'media(): The given selector would not define a meaningful scope and should be removed.';
  } @else {
    @if $up {
      @if $upValue != 0 {
        $query: $query + ' and (min-width: #{$upValue})';
      }
    }

    @if $down {
      @if type-of($down) == number {
        $query: $query + ' and (max-width: #{$downValue})';
      } @else {
        $query: $query + ' and (max-width: #{$downValue - 1px})';
      }
    }

    @media #{$query} {
      @content;
    }
  }
}
